{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "bartwta",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "timeZone": {
      "type": "string",
      "defaultValue": "AUS Eastern Standard Time",
      "metadata": {
        "description": "TimeZone for the VM deployment"
      }
    },
    "nodeConfigurationName": {
      "type": "string",
      "defaultValue": "Main.CLIENT",
      "metadata": {
        "description": "Required property. Specifies the node configuration in the Automation account to assign to the node"
      }
    },
    "automationAccountName": {
      "type": "string",
      "defaultValue": "tarun-auto-account",
      "metadata": {
        "description": "Name of your Azure automation account"
      }
    },
    "automationAccountRG": {
      "type": "string",
      "defaultValue": "tarun-day3-rg",
      "metadata": {
        "description": "Resource Group of your Azure automation account"
      }
    },
    "dataDiskCount": {
      "type": "int",
      "allowedvalues": [
        1,
        2,
        3,
        4
      ],
      "metadata": {
        "description": "number of data disks."
      }
    },
    "JukeboxID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Unique number for eJukebox machine"
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "vaultName": {
      "type": "string",
      "defaultValue": "taryn-key-vault",
      "metadata": {
        "description": "Name of Key Vault that has a secret"
      }
    },
    "vaultResourceGroup": {
      "type": "string",
      "defaultValue": "tarun-day3-rg",
      "metadata": {
        "description": "Resource Group of Key Vault that has a secret"
      }
    },
    "secretUrlWithVersion1": {
      "type": "string",
      "defaultValue": "https://taryn-key-vault.vault.azure.net/secrets/tarun-encryption-cert/099ec5949dc044a5a20e8c62022a08e4",
      "metadata": {
        "description": "Url of the certificate in Key Vault"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": ""
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": ""
    }
  },
  "variables": {
    "virtualNetworkName": "eJukeNetwork",
    "existingVirtualNetworkResourceGroup": "eJukeCommon",
    "SubscriptionID": "[subscription().subscriptionId]",
    "vnetId": "tarun-vnet",
    "AutomationAccountId": "[resourceId(parameters('automationAccountRG'), 'Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/first')]",
    "vmName": "[concat('eJukebox', parameters('JukeboxID'))]",
    "OSDiskName": "[concat('OsDisk', variables('vmName'))]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "nicName": "[concat('eJukebox', parameters('JukeboxID'), '_NIC')]",
    "dnsNameForPublicIP": "[concat('prefix', uniqueString(resourceGroup().id))]",
    "publicIPAddressName": "[concat('eJukebox', parameters('JukeboxID'), '_PIP')]",
    "publicIPAddressType": "Dynamic",
    "vmSize": "Standard_B2s",
    "NetworkSecurityGroupName": "[concat('eJukebox', parameters('JukeboxID'), '_NSG')]",
    "diagnosticsStorageAccountName": "[variables('StorageAccountName')]",
    "wadmetricsresourceid": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
    "StorageAccountName": "[concat('diagstg', uniqueString(resourceGroup().id))]",
    "CustomScriptScriptFolder": "CustomScripts",
    "CustomScriptScriptFileName": "CustomScript.ps1",
    "FileToBeCopied": "UserLogonScript.ps1",
    "CustomScriptParameters": "[concat('-artifactsLocation ', parameters('_artifactsLocation'), ' -artifactsLocationSasToken \"', parameters('_artifactsLocationSasToken'), '\" -folderName ', variables('CustomScriptScriptFolder'), ' -fileToInstall ', variables('fileToBeCopied'))]"
  },
  "resources": [
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('NetworkSecurityGroupName')]",
      "tags": {
        "displayName": "NetworkSecurityGroup"
      },
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "HTTP",
            "properties": {
              "description": "Allow inbound to Azure HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "HTTP81",
            "properties": {
              "description": "Allow inbound to Azure HTTP81",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "81",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "description": "Allow inbound to Azure HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "PowerShell",
            "properties": {
              "description": "Allow inbound to Azure PowerShell",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5986",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          },
          {
            "name": "RemoteDesktop",
            "properties": {
              "description": "Allow inbound to Azure RemoteDesktop",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "SHOUTcast",
            "properties": {
              "description": "Allow inbound to Azure SHOUTcast",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 106,
              "direction": "Inbound"
            }
          },
          {
            "name": "VNC",
            "properties": {
              "description": "Allow inbound to Azure VNC",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5190",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "StationPlaylist",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NetworkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NetworkSecurityGroupName'))]"
      ]
    },
    {
//When we use managed disk make sure you use the latest API version for the VM resource as of this writing its ( �apiVersion�: �2016-04-30-preview�)
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true",
            "timeZone": "[parameters('timeZone')]"
          },
          "secrets": [
            {
              "sourceVault": {
                "id": "[resourceId(parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
              },
              "vaultCertificates": [
                {
                  "certificateUrl": "[parameters('secretUrlWithVersion1')]",
                  "certificateStore": "My"
                }
              ]
            }
          ]
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "name": "[variables('OSDiskName')]"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[parameters('dataDiskCount')]",
              "input": {
                "diskSizeGB": "512",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "apiVersion": "2016-04-30-preview",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "WadCfg": {
                "DiagnosticMonitorConfiguration": {
                  "overallQuotaInMB": "4096",
                  "DiagnosticInfrastructureLogs": {
                    "scheduledTransferLogLevelFilter": "Error"
                  },
                  "WindowsEventLog": {
                    "scheduledTransferPeriod": "PT1M",
                    "DataSource": [
                      {
                        "name": "Application!*[System[(Level = 1) or (Level = 2)]]"
                      },
                      {
                        "name": "Security!*[System[(Level = 1 or Level = 2)]]"
                      },
                      {
                        "name": "System!*[System[(Level = 1 or Level = 2)]]"
                      }
                    ]
                  },
                  "PerformanceCounters": {
                    "scheduledTransferPeriod": "PT1M",
                    "PerformanceCounterConfiguration": [
                      {
                        "counterSpecifier": "\\Processor(_Total)\\% Processor Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "CPU utilization",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Processor(_Total)\\% Privileged Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "CPU privileged time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Processor(_Total)\\% User Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "CPU user time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                        "sampleRate": "PT15S",
                        "unit": "Count",
                        "annotation": [
                          {
                            "displayName": "CPU frequency",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\System\\Processes",
                        "sampleRate": "PT15S",
                        "unit": "Count",
                        "annotation": [
                          {
                            "displayName": "Processes",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Process(_Total)\\Thread Count",
                        "sampleRate": "PT15S",
                        "unit": "Count",
                        "annotation": [
                          {
                            "displayName": "Threads",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Process(_Total)\\Handle Count",
                        "sampleRate": "PT15S",
                        "unit": "Count",
                        "annotation": [
                          {
                            "displayName": "Handles",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Memory usage",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Memory\\Available Bytes",
                        "sampleRate": "PT15S",
                        "unit": "Bytes",
                        "annotation": [
                          {
                            "displayName": "Memory available",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Memory\\Committed Bytes",
                        "sampleRate": "PT15S",
                        "unit": "Bytes",
                        "annotation": [
                          {
                            "displayName": "Memory committed",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Memory\\Commit Limit",
                        "sampleRate": "PT15S",
                        "unit": "Bytes",
                        "annotation": [
                          {
                            "displayName": "Memory commit limit",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\% Disk Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Disk active time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\% Disk Read Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Disk active read time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\% Disk Write Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Disk active write time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Transfers/sec",
                        "sampleRate": "PT15S",
                        "unit": "CountPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk operations",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Reads/sec",
                        "sampleRate": "PT15S",
                        "unit": "CountPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk read operations",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Writes/sec",
                        "sampleRate": "PT15S",
                        "unit": "CountPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk write operations",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Bytes/sec",
                        "sampleRate": "PT15S",
                        "unit": "BytesPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk speed",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Read Bytes/sec",
                        "sampleRate": "PT15S",
                        "unit": "BytesPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk read speed",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Write Bytes/sec",
                        "sampleRate": "PT15S",
                        "unit": "BytesPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk write speed",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Disk free space (percentage)",
                            "locale": "en-us"
                          }
                        ]
                      }
                    ]
                  },
                  "Metrics": {
                    "resourceId": "[variables('wadmetricsresourceid')]",
                    "MetricAggregation": [
                      {
                        "scheduledTransferPeriod": "PT1H"
                      },
                      {
                        "scheduledTransferPeriod": "PT1M"
                      }
                    ]
                  }
                }
              }
            },
            "protectedSettings": {
              "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
              "storageAccountKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName')), '2016-01-01').keys[0].value]"
            }
          }
        },
        {
          "name": "DSC",
          "type": "extensions",
          "apiVersion": "2016-04-30-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('VMName'))]"
          ],
          "tags": {
            "displayName": "DSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.75",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
              "Items": {
                "registrationKeyPrivate": "[listKeys(variables('AutomationAccountId'), '2018-01-15').Keys[0].value]"
              }
            },
            "settings": {
              "Properties": [
                {
                  "Name": "RegistrationKey",
                  "Value": {
                    "UserName": "PLACEHOLDER_DONOTUSE",
                    "Password": "PrivateSettingsRef:registrationKeyPrivate"
                  },
                  "TypeName": "System.Management.Automation.PSCredential"
                },
                {
                  "Name": "RegistrationUrl",
                  "Value": "[reference(variables('AutomationAccountId'), '2018-01-15').registrationUrl]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "NodeConfigurationName",
                  "Value": "[parameters('nodeConfigurationName')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationMode",
                  "Value": "ApplyandAutoCorrect",
                  "TypeName": "System.String"
                },
                {
                  "Name": "RebootNodeIfNeeded",
                  "Value": true,
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "ActionAfterReboot",
                  "Value": "ContinueConfiguration",
                  "TypeName": "System.String"
                }
              ]
            }
          }
        },
        //blogs.technet.microsoft.com/markrenoden/2016/07/26/deploying-a-dc-to-azure-iaas-with-arm-and-dsc/
        {
          "name": "CustomScript",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-04-30-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
          ],
          "tags": {
            "displayName": "CustomScript"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), variables('CustomScriptScriptFolder'), '/', variables('CustomScriptScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('CustomScriptScriptFolder'), '/', variables('CustomScriptScriptFileName'), ' ', variables('CustomScriptParameters'))]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "StorageAccount"
      },
      "kind": "Storage"
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    }
  }
}